scope: postgres
namespace: /service/
name: "{{ inventory_hostname }}"

restapi:
  listen: 0.0.0.0:8008
  connect_address: "{{ ansible_facts['default_ipv4']['address'] }}:8008"

etcd3:
  hosts:
    - "node001:2379"
    - "node002:2379"
    - "node003:2379"

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        max_connections: 100
        wal_level: replica
        wal_log_hints: 'on'
        max_wal_senders: 10
        max_replication_slots: 10
        hot_standby: 'on'
        wal_keep_segments: 8
        wal_keep_size: 128MB
        hot_standby_feedback: 'on'
  initdb:
    - encoding: UTF8
    - data-checksums
  pg_hba:
    - host replication replicator 127.0.0.1/32 md5
    - host replication replicator 192.168.1.0/24 md5
    - host all all 0.0.0.0/0 md5
  users:
    admin:
      password: admin_password
      options:
        - createrole
        - createdb

postgresql:
  listen: 0.0.0.0:5432
  connect_address: "{{ ansible_facts['default_ipv4']['address'] }}:5432"
  data_dir: /var/lib/postgresql/15/main
  bin_dir: /usr/lib/postgresql/15/bin
  pgpass: /tmp/pgpass
  authentication:
    replication:
      username: replicator
      password: "{{ postgresql_replication_password }}"
    superuser:
      username: postgres
      password: "{{ postgresql_superuser_password }}"
  parameters:
    unix_socket_directories: '/var/run/postgresql'

tags:
  nofailover: false
  noloadbalance: false
  clonefrom: false
  nosync: false
